# Generated by Django 4.2.2 on 2023-10-16 17:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import restapi.helper.validators


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0022_alter_group_category"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=150)),
                ("last_name", models.CharField(blank=True, max_length=150)),
                ("image", models.ImageField(blank=True, null=True, upload_to="users/")),
                (
                    "background",
                    models.ImageField(blank=True, null=True, upload_to="background/"),
                ),
                (
                    "civil",
                    models.CharField(
                        blank=True,
                        max_length=12,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Civil must be exactly 12 digits.",
                                regex="^\\d{12}$",
                            )
                        ],
                    ),
                ),
                (
                    "gender",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Undefined"), (1, "رجال"), (2, "نساء")],
                        null=True,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                limit_value=restapi.helper.validators.today
                            )
                        ],
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="phone must be exactly 8 digits.",
                                regex="^\\d{8}$",
                            )
                        ],
                    ),
                ),
                ("twitter", models.CharField(blank=True, max_length=150)),
                ("instagram", models.CharField(blank=True, max_length=150)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "User",
                "db_table": "auth_user",
                "permissions": [
                    ("canViewUser", "Can View User"),
                    ("canAddUser", "Can Add User"),
                    ("canChangeUser", "Can Change User"),
                    ("canDeleteUser", "Can Delete User"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "منشور"),
                            (2, "خاص"),
                            (3, "في أنتظار الموافقة"),
                            (4, "يفتقد للبيانات"),
                            (5, "جاري العمل عليه"),
                            (6, "جديد"),
                            (9, "محذوف"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        blank=True,
                        choices=[(3, "عالي"), (2, "متوسط"), (1, "منخفض")],
                        null=True,
                    ),
                ),
                ("moderators", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("target_votes", models.PositiveIntegerField(blank=True, null=True)),
                ("twitter", models.CharField(blank=True, max_length=120, null=True)),
                ("instagram", models.CharField(blank=True, max_length=120, null=True)),
                ("website", models.URLField(blank=True, max_length=120, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Campaign",
                "verbose_name_plural": "Campaign",
                "db_table": "campaign",
                "permissions": [
                    ("canViewCampaign", "Can View Campaign"),
                    ("canAddCampaign", "Can Add Campaign"),
                    ("canChangeCampaign", "Can Change Campaign"),
                    ("canDeleteCampaign", "Can Delete Campaign"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Candidate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "منشور"),
                            (2, "خاص"),
                            (3, "في أنتظار الموافقة"),
                            (4, "يفتقد للبيانات"),
                            (5, "جاري العمل عليه"),
                            (6, "جديد"),
                            (9, "محذوف"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        blank=True,
                        choices=[(3, "عالي"), (2, "متوسط"), (1, "منخفض")],
                        null=True,
                    ),
                ),
                ("moderators", models.CharField(blank=True, max_length=255, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Undefined"), (1, "رجال"), (2, "نساء")],
                        null=True,
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="candidates/"),
                ),
                ("tags", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Candidate",
                "verbose_name_plural": "Candidates",
                "db_table": "candidate",
                "permissions": [
                    ("canViewCandidate", "Can View Candidate"),
                    ("canAddCandidate", "Can Add Candidate"),
                    ("canChangeCandidate", "Can Change Candidate"),
                    ("canDeleteCandidate", "Can Delete Candidate"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="elections/"),
                ),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="restapi.category",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Category",
                "db_table": "category",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Config",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=255, null=True, unique=True)),
                ("value", models.TextField(null=True)),
            ],
            options={
                "verbose_name": "Configuration",
                "verbose_name_plural": "Configuration",
                "db_table": "config",
                "permissions": [
                    ("canViewConfig", "Can View Config"),
                    ("canAddConfig", "Can Add Config"),
                    ("canChangeConfig", "Can Change Config"),
                    ("canDeleteConfig", "Can Delete Config"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Election",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "منشور"),
                            (2, "خاص"),
                            (3, "في أنتظار الموافقة"),
                            (4, "يفتقد للبيانات"),
                            (5, "جاري العمل عليه"),
                            (6, "جديد"),
                            (9, "محذوف"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        blank=True,
                        choices=[(3, "عالي"), (2, "متوسط"), (1, "منخفض")],
                        null=True,
                    ),
                ),
                ("moderators", models.CharField(blank=True, max_length=255, null=True)),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "elect_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "قوائم"), (2, "مرشحين"), (3, "قوائم ومرشحين")],
                        null=True,
                    ),
                ),
                (
                    "elect_result",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "نتائج نهائية"), (2, "نتائج تفصيلية")],
                        null=True,
                    ),
                ),
                ("elect_votes", models.PositiveIntegerField(blank=True, null=True)),
                ("elect_seats", models.PositiveIntegerField(blank=True, null=True)),
                ("electors", models.PositiveIntegerField(blank=True, null=True)),
                ("electors_males", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "electors_females",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("attendees", models.PositiveIntegerField(blank=True, null=True)),
                ("attendees_males", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "attendees_females",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="category_elections",
                        to="restapi.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sub_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subcategory_elections",
                        to="restapi.category",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Election",
                "verbose_name_plural": "Election",
                "db_table": "election",
                "permissions": [
                    ("canViewElection", "Can View Election"),
                    ("canAddElection", "Can Add Election"),
                    ("canChangeElection", "Can Change Election"),
                    ("canDeleteElection", "Can Delete Election"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="ElectionCandidate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("votes", models.PositiveIntegerField(default=0)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "candidate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="election_candidates",
                        to="restapi.candidate",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "election",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="candidate_elections",
                        to="restapi.election",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Election Candidate",
                "verbose_name_plural": "Election Candidate",
                "db_table": "election_candidate",
                "permissions": [
                    ("canViewElectionCandidate", "Can View Election Candidate"),
                    ("canAddElectionCandidate", "Can Add Election Candidate"),
                    ("canChangeElectionCandidate", "Can Change Election Candidate"),
                    ("canDeleteElectionCandidate", "Can Delete Election Candidate"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="ElectionCommittee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "gender",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Undefined"), (1, "رجال"), (2, "نساء")],
                        null=True,
                    ),
                ),
                ("location", models.TextField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "election",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="committee_elections",
                        to="restapi.election",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Election Committe",
                "verbose_name_plural": "Election Committes",
                "db_table": "election_committee",
                "permissions": [
                    ("canViewElectionCommitte", "Can View Election Committe"),
                    ("canAddElectionCommitte", "Can Add Election Committe"),
                    ("canChangeElectionCommitte", "Can Change Election Committe"),
                    ("canDeleteElectionCommitte", "Can Delete Election Committe"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Elector",
            fields=[
                ("civil", models.BigAutoField(primary_key=True, serialize=False)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "family_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "gender",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Undefined"), (1, "رجال"), (2, "نساء")],
                        null=True,
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "membership_no",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("box_no", models.CharField(blank=True, max_length=255, null=True)),
                ("enrollment_date", models.DateField(blank=True, null=True)),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Elector",
                "verbose_name_plural": "Elector",
                "db_table": "electors",
                "permissions": [
                    ("canViewElector", "Can View Elector"),
                    ("canAddElector", "Can Add Elector"),
                    ("canChangeElector", "Can Change Elector"),
                    ("canDeleteElector", "Can Delete Elector"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
            ],
            options={
                "verbose_name": "Tag",
                "verbose_name_plural": "Tag",
                "db_table": "Tag",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="ElectionCommitteeResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("votes", models.IntegerField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "election_candidate",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="committee_result_candidates",
                        to="restapi.electioncandidate",
                    ),
                ),
                (
                    "election_committee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="committee_result_elections",
                        to="restapi.electioncommittee",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Committe Result",
                "verbose_name_plural": "Committe Results",
                "db_table": "election_committee_result",
                "permissions": [
                    ("canViewCommitteeResult", "Can View Committee Result"),
                    ("canAddCommitteeResult", "Can Add Committee Result"),
                    ("canChangeCommitteeResult", "Can Change Committee Result"),
                    ("canDeleteCommitteeResult", "Can Delete Committee Result"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="CampaignProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "منشور"),
                            (2, "خاص"),
                            (3, "في أنتظار الموافقة"),
                            (4, "يفتقد للبيانات"),
                            (5, "جاري العمل عليه"),
                            (6, "جديد"),
                            (9, "محذوف"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        blank=True,
                        choices=[(3, "عالي"), (2, "متوسط"), (1, "منخفض")],
                        null=True,
                    ),
                ),
                ("moderators", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "campaign",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="profile_campaigns",
                        to="restapi.campaign",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Campaign Profile",
                "verbose_name_plural": "Campaign Profiles",
                "db_table": "campaign_profile",
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="CampaignMember",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "civil",
                    models.CharField(
                        blank=True,
                        max_length=12,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Civil must be exactly 12 digits.",
                                regex="^\\d{12}$",
                            )
                        ],
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="phone must be exactly 8 digits.",
                                regex="^\\d{8}$",
                            )
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "جديد"),
                            (2, "تم التواصل"),
                            (3, "تم التأكيد"),
                            (4, "غير مؤكد"),
                            (5, "غير معروف"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_members",
                        to="restapi.campaign",
                    ),
                ),
                (
                    "committee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="committee_members",
                        to="restapi.electioncommittee",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_role_members",
                        to="auth.group",
                    ),
                ),
                (
                    "supervisor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="supervised_members",
                        to="restapi.campaignmember",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Campaign Member",
                "verbose_name_plural": "Campaign Members",
                "db_table": "campaign_member",
                "permissions": [
                    ("canViewCampaignMember", "Can View Test Now"),
                    ("canAddCampaignMember", "Can Add Test Now"),
                    ("canChangeCampaignMember", "Can Change Test Now"),
                    ("canDeleteCampaignMember", "Can Delete Test Now"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="CampaignGuarantee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("phone", models.CharField(blank=True, max_length=8, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (1, "جديد"),
                            (2, "تم التواصل"),
                            (3, "تم التأكيد"),
                            (4, "غير مؤكد"),
                            (5, "غير معروف"),
                        ],
                        null=True,
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="campaign_guarantees",
                        to="restapi.campaign",
                    ),
                ),
                (
                    "civil",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="elector_guarantees",
                        to="restapi.elector",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guarantee_guarantors",
                        to="restapi.campaignmember",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Campaign Guarantee",
                "verbose_name_plural": "Campaign Guarantees",
                "db_table": "campaign_guarantee",
                "permissions": [
                    ("canViewCampaignGuarantee", "Can View Campaign Guarantee"),
                    ("canAddCampaignGuarantee", "Can Add Campaign Guarantee"),
                    ("canChangeCampaignGuarantee", "Can Change Campaign Guarantee"),
                    ("canDeleteCampaignGuarantee", "Can Delete Campaign Guarantee"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.CreateModel(
            name="CampaignAttendee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField(blank=True, null=True)),
                (
                    "civil",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="elector_attendees",
                        to="restapi.elector",
                    ),
                ),
                (
                    "committee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="committee_attendees",
                        to="restapi.electioncommittee",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "election",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="election_attendees",
                        to="restapi.election",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="attendant_attendees",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Campaign Attendee",
                "verbose_name_plural": "Campaign Attendees",
                "db_table": "campaign_attendee",
                "permissions": [
                    ("canViewCampaignAttendee", "Can View Campaign Attendee"),
                    ("canAddCampaignAttendee", "Can Add Campaign Attendee"),
                    ("canChangeCampaignAttendee", "Can Change Campaign Attendee"),
                    ("canDeleteCampaignAttendee", "Can Delete Campaign Attendee"),
                ],
                "default_permissions": [],
            },
        ),
        migrations.AddField(
            model_name="campaign",
            name="election_candidate",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="candidate_campaigns",
                to="restapi.electioncandidate",
            ),
        ),
        migrations.AddField(
            model_name="campaign",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_updated",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Area",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(blank=True, default=False, null=True)),
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("slug", models.SlugField(blank=True, null=True, unique=True)),
                (
                    "description",
                    models.TextField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_deleted",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="restapi.area",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Area",
                "verbose_name_plural": "Area",
                "db_table": "area",
                "default_permissions": [],
            },
        ),
    ]
